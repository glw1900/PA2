var search_data = {"index":{"searchIndex":["movie","moviedata","movietest","user","add()","add()","load_data()","mean()","most_similar()","movies()","new()","new()","new()","new()","predict()","prepare_data()","rating()","rms()","run_test()","stddev()","to_a()","viewers()","created.rid"],"longSearchIndex":["movie","moviedata","movietest","user","movie#add()","user#add()","moviedata#load_data()","movietest#mean()","moviedata#most_similar()","moviedata#movies()","movie::new()","moviedata::new()","movietest::new()","user::new()","moviedata#predict()","moviedata#prepare_data()","moviedata#rating()","movietest#rms()","moviedata#run_test()","movietest#stddev()","movietest#to_a()","moviedata#viewers()",""],"info":[["Movie","","Movie.html","","<p>This Movie class contents the number of the movie, and a hash that store\nthe users who have seen this …\n"],["MovieData","","MovieData.html","","<p>This is the MovieData Class, I store all the data from the test file and\nthe base file in this class, …\n"],["MovieTest","","MovieTest.html","","<p>This MovieTest class content the predicting result and some information\nabout the accuracy of the result. …\n"],["User","","User.html","","<p>This User class contents the number of the user, and a hash that store the\nmovie the user seen and its …\n"],["add","Movie","Movie.html#method-i-add","(person,rating)","<p>This method just add a new pair of viewer and rating to the hash.\n"],["add","User","User.html#method-i-add","(movie,rating)","<p>This method just add a new pair of movie and rating to the hash.\n"],["load_data","MovieData","MovieData.html#method-i-load_data","(entry)","<p>This method store the data in a more convenient way to do the computation\nsuch as predict and get similarity …\n"],["mean","MovieTest","MovieTest.html#method-i-mean","()","<p>This method return the mean error of the predict.\n"],["most_similar","MovieData","MovieData.html#method-i-most_similar","(u)","<p>This method return the array of most similar users to user u.\n"],["movies","MovieData","MovieData.html#method-i-movies","(u)","<p>This method returns the arrays of all the movie user u has seen\n"],["new","Movie","Movie.html#method-c-new","(number,person,rating)",""],["new","MovieData","MovieData.html#method-c-new","(filename, extension = :u)","<p>This is the initializer, it first reads in the data, and then use two\nhelper function to load the data. …\n"],["new","MovieTest","MovieTest.html#method-c-new","(data)",""],["new","User","User.html#method-c-new","(number,movie,rating)",""],["predict","MovieData","MovieData.html#method-i-predict","(u,m)","<p>This method predict the rating of movie m by user u from it similar_list\n"],["prepare_data","MovieData","MovieData.html#method-i-prepare_data","(data)","<p>This method parse the big string to the an array with user, movie and\nrating information in a organized …\n"],["rating","MovieData","MovieData.html#method-i-rating","(u,m)","<p>This method returns the rating of the movie m of user u, which can be\nlooked up in the user object.\n"],["rms","MovieTest","MovieTest.html#method-i-rms","()","<p>This method return the root mean square error of the predict.\n"],["run_test","MovieData","MovieData.html#method-i-run_test","(k = test_entry.length)","<p>This method return a MovieTest object which contents the result of the\ntest.\n"],["stddev","MovieTest","MovieTest.html#method-i-stddev","()","<p>This method return the standard deviation error of the predict.\n"],["to_a","MovieTest","MovieTest.html#method-i-to_a","()","<p>This method return an array of the result.\n"],["viewers","MovieData","MovieData.html#method-i-viewers","(m)","<p>This method just return all the viewers of the movie m.\n"],["created.rid","","doc/created_rid.html","",""]]}}